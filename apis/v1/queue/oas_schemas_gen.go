// Code generated by ogen, DO NOT EDIT.

package queue

import (
	"time"

	"github.com/go-faster/errors"
)

type ApiKeyAuth struct {
	Username string
	Password string
	Roles    []string
}

// GetUsername returns the value of Username.
func (s *ApiKeyAuth) GetUsername() string {
	return s.Username
}

// GetPassword returns the value of Password.
func (s *ApiKeyAuth) GetPassword() string {
	return s.Password
}

// GetRoles returns the value of Roles.
func (s *ApiKeyAuth) GetRoles() []string {
	return s.Roles
}

// SetUsername sets the value of Username.
func (s *ApiKeyAuth) SetUsername(val string) {
	s.Username = val
}

// SetPassword sets the value of Password.
func (s *ApiKeyAuth) SetPassword(val string) {
	s.Password = val
}

// SetRoles sets the value of Roles.
func (s *ApiKeyAuth) SetRoles(val []string) {
	s.Roles = val
}

type ClearQueueBadRequest Error

func (*ClearQueueBadRequest) clearQueueRes() {}

type ClearQueueInternalServerError Error

func (*ClearQueueInternalServerError) clearQueueRes() {}

type ClearQueueNotFound Error

func (*ClearQueueNotFound) clearQueueRes() {}

type ClearQueueOK struct {
	SimpleMQ OptClearQueueOKSimpleMQ `json:"SimpleMQ"`
	IsOk     OptBool                 `json:"is_ok"`
}

// GetSimpleMQ returns the value of SimpleMQ.
func (s *ClearQueueOK) GetSimpleMQ() OptClearQueueOKSimpleMQ {
	return s.SimpleMQ
}

// GetIsOk returns the value of IsOk.
func (s *ClearQueueOK) GetIsOk() OptBool {
	return s.IsOk
}

// SetSimpleMQ sets the value of SimpleMQ.
func (s *ClearQueueOK) SetSimpleMQ(val OptClearQueueOKSimpleMQ) {
	s.SimpleMQ = val
}

// SetIsOk sets the value of IsOk.
func (s *ClearQueueOK) SetIsOk(val OptBool) {
	s.IsOk = val
}

func (*ClearQueueOK) clearQueueRes() {}

type ClearQueueOKSimpleMQ struct {
	Result OptString `json:"result"`
}

// GetResult returns the value of Result.
func (s *ClearQueueOKSimpleMQ) GetResult() OptString {
	return s.Result
}

// SetResult sets the value of Result.
func (s *ClearQueueOKSimpleMQ) SetResult(val OptString) {
	s.Result = val
}

type ClearQueueUnauthorized Error

func (*ClearQueueUnauthorized) clearQueueRes() {}

// Ref: #/components/schemas/CommonServiceItem
type CommonServiceItem struct {
	ID CommonServiceItemID `json:"ID"`
	// リソース名.
	Name         string                          `json:"Name"`
	Description  OptCommonServiceItemDescription `json:"Description"`
	Settings     Settings                        `json:"Settings"`
	SettingsHash string                          `json:"SettingsHash"`
	Status       Status                          `json:"Status"`
	ServiceClass string                          `json:"ServiceClass"`
	Availability string                          `json:"Availability"`
	CreatedAt    time.Time                       `json:"CreatedAt"`
	ModifiedAt   time.Time                       `json:"ModifiedAt"`
	Provider     Provider                        `json:"Provider"`
	Icon         OptCommonServiceItemIcon        `json:"Icon"`
	Tags         []string                        `json:"Tags"`
}

// GetID returns the value of ID.
func (s *CommonServiceItem) GetID() CommonServiceItemID {
	return s.ID
}

// GetName returns the value of Name.
func (s *CommonServiceItem) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *CommonServiceItem) GetDescription() OptCommonServiceItemDescription {
	return s.Description
}

// GetSettings returns the value of Settings.
func (s *CommonServiceItem) GetSettings() Settings {
	return s.Settings
}

// GetSettingsHash returns the value of SettingsHash.
func (s *CommonServiceItem) GetSettingsHash() string {
	return s.SettingsHash
}

// GetStatus returns the value of Status.
func (s *CommonServiceItem) GetStatus() Status {
	return s.Status
}

// GetServiceClass returns the value of ServiceClass.
func (s *CommonServiceItem) GetServiceClass() string {
	return s.ServiceClass
}

// GetAvailability returns the value of Availability.
func (s *CommonServiceItem) GetAvailability() string {
	return s.Availability
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CommonServiceItem) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetModifiedAt returns the value of ModifiedAt.
func (s *CommonServiceItem) GetModifiedAt() time.Time {
	return s.ModifiedAt
}

// GetProvider returns the value of Provider.
func (s *CommonServiceItem) GetProvider() Provider {
	return s.Provider
}

// GetIcon returns the value of Icon.
func (s *CommonServiceItem) GetIcon() OptCommonServiceItemIcon {
	return s.Icon
}

// GetTags returns the value of Tags.
func (s *CommonServiceItem) GetTags() []string {
	return s.Tags
}

// SetID sets the value of ID.
func (s *CommonServiceItem) SetID(val CommonServiceItemID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *CommonServiceItem) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *CommonServiceItem) SetDescription(val OptCommonServiceItemDescription) {
	s.Description = val
}

// SetSettings sets the value of Settings.
func (s *CommonServiceItem) SetSettings(val Settings) {
	s.Settings = val
}

// SetSettingsHash sets the value of SettingsHash.
func (s *CommonServiceItem) SetSettingsHash(val string) {
	s.SettingsHash = val
}

// SetStatus sets the value of Status.
func (s *CommonServiceItem) SetStatus(val Status) {
	s.Status = val
}

// SetServiceClass sets the value of ServiceClass.
func (s *CommonServiceItem) SetServiceClass(val string) {
	s.ServiceClass = val
}

// SetAvailability sets the value of Availability.
func (s *CommonServiceItem) SetAvailability(val string) {
	s.Availability = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CommonServiceItem) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetModifiedAt sets the value of ModifiedAt.
func (s *CommonServiceItem) SetModifiedAt(val time.Time) {
	s.ModifiedAt = val
}

// SetProvider sets the value of Provider.
func (s *CommonServiceItem) SetProvider(val Provider) {
	s.Provider = val
}

// SetIcon sets the value of Icon.
func (s *CommonServiceItem) SetIcon(val OptCommonServiceItemIcon) {
	s.Icon = val
}

// SetTags sets the value of Tags.
func (s *CommonServiceItem) SetTags(val []string) {
	s.Tags = val
}

// CommonServiceItemDescription represents sum type.
type CommonServiceItemDescription struct {
	Type   CommonServiceItemDescriptionType // switch on this field
	String string
	Null   struct{}
}

// CommonServiceItemDescriptionType is oneOf type of CommonServiceItemDescription.
type CommonServiceItemDescriptionType string

// Possible values for CommonServiceItemDescriptionType.
const (
	StringCommonServiceItemDescription CommonServiceItemDescriptionType = "string"
	NullCommonServiceItemDescription   CommonServiceItemDescriptionType = "struct{}"
)

// IsString reports whether CommonServiceItemDescription is string.
func (s CommonServiceItemDescription) IsString() bool {
	return s.Type == StringCommonServiceItemDescription
}

// IsNull reports whether CommonServiceItemDescription is struct{}.
func (s CommonServiceItemDescription) IsNull() bool {
	return s.Type == NullCommonServiceItemDescription
}

// SetString sets CommonServiceItemDescription to string.
func (s *CommonServiceItemDescription) SetString(v string) {
	s.Type = StringCommonServiceItemDescription
	s.String = v
}

// GetString returns string and true boolean if CommonServiceItemDescription is string.
func (s CommonServiceItemDescription) GetString() (v string, ok bool) {
	if !s.IsString() {
		return v, false
	}
	return s.String, true
}

// NewStringCommonServiceItemDescription returns new CommonServiceItemDescription from string.
func NewStringCommonServiceItemDescription(v string) CommonServiceItemDescription {
	var s CommonServiceItemDescription
	s.SetString(v)
	return s
}

// SetNull sets CommonServiceItemDescription to struct{}.
func (s *CommonServiceItemDescription) SetNull(v struct{}) {
	s.Type = NullCommonServiceItemDescription
	s.Null = v
}

// GetNull returns struct{} and true boolean if CommonServiceItemDescription is struct{}.
func (s CommonServiceItemDescription) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullCommonServiceItemDescription returns new CommonServiceItemDescription from struct{}.
func NewNullCommonServiceItemDescription(v struct{}) CommonServiceItemDescription {
	var s CommonServiceItemDescription
	s.SetNull(v)
	return s
}

// CommonServiceItemID represents sum type.
type CommonServiceItemID struct {
	Type   CommonServiceItemIDType // switch on this field
	String string
	Int    int
}

// CommonServiceItemIDType is oneOf type of CommonServiceItemID.
type CommonServiceItemIDType string

// Possible values for CommonServiceItemIDType.
const (
	StringCommonServiceItemID CommonServiceItemIDType = "string"
	IntCommonServiceItemID    CommonServiceItemIDType = "int"
)

// IsString reports whether CommonServiceItemID is string.
func (s CommonServiceItemID) IsString() bool { return s.Type == StringCommonServiceItemID }

// IsInt reports whether CommonServiceItemID is int.
func (s CommonServiceItemID) IsInt() bool { return s.Type == IntCommonServiceItemID }

// SetString sets CommonServiceItemID to string.
func (s *CommonServiceItemID) SetString(v string) {
	s.Type = StringCommonServiceItemID
	s.String = v
}

// GetString returns string and true boolean if CommonServiceItemID is string.
func (s CommonServiceItemID) GetString() (v string, ok bool) {
	if !s.IsString() {
		return v, false
	}
	return s.String, true
}

// NewStringCommonServiceItemID returns new CommonServiceItemID from string.
func NewStringCommonServiceItemID(v string) CommonServiceItemID {
	var s CommonServiceItemID
	s.SetString(v)
	return s
}

// SetInt sets CommonServiceItemID to int.
func (s *CommonServiceItemID) SetInt(v int) {
	s.Type = IntCommonServiceItemID
	s.Int = v
}

// GetInt returns int and true boolean if CommonServiceItemID is int.
func (s CommonServiceItemID) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntCommonServiceItemID returns new CommonServiceItemID from int.
func NewIntCommonServiceItemID(v int) CommonServiceItemID {
	var s CommonServiceItemID
	s.SetInt(v)
	return s
}

// CommonServiceItemIcon represents sum type.
type CommonServiceItemIcon struct {
	Type                   CommonServiceItemIconType // switch on this field
	Null                   struct{}
	CommonServiceItemIcon1 CommonServiceItemIcon1
}

// CommonServiceItemIconType is oneOf type of CommonServiceItemIcon.
type CommonServiceItemIconType string

// Possible values for CommonServiceItemIconType.
const (
	NullCommonServiceItemIcon                   CommonServiceItemIconType = "struct{}"
	CommonServiceItemIcon1CommonServiceItemIcon CommonServiceItemIconType = "CommonServiceItemIcon1"
)

// IsNull reports whether CommonServiceItemIcon is struct{}.
func (s CommonServiceItemIcon) IsNull() bool { return s.Type == NullCommonServiceItemIcon }

// IsCommonServiceItemIcon1 reports whether CommonServiceItemIcon is CommonServiceItemIcon1.
func (s CommonServiceItemIcon) IsCommonServiceItemIcon1() bool {
	return s.Type == CommonServiceItemIcon1CommonServiceItemIcon
}

// SetNull sets CommonServiceItemIcon to struct{}.
func (s *CommonServiceItemIcon) SetNull(v struct{}) {
	s.Type = NullCommonServiceItemIcon
	s.Null = v
}

// GetNull returns struct{} and true boolean if CommonServiceItemIcon is struct{}.
func (s CommonServiceItemIcon) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullCommonServiceItemIcon returns new CommonServiceItemIcon from struct{}.
func NewNullCommonServiceItemIcon(v struct{}) CommonServiceItemIcon {
	var s CommonServiceItemIcon
	s.SetNull(v)
	return s
}

// SetCommonServiceItemIcon1 sets CommonServiceItemIcon to CommonServiceItemIcon1.
func (s *CommonServiceItemIcon) SetCommonServiceItemIcon1(v CommonServiceItemIcon1) {
	s.Type = CommonServiceItemIcon1CommonServiceItemIcon
	s.CommonServiceItemIcon1 = v
}

// GetCommonServiceItemIcon1 returns CommonServiceItemIcon1 and true boolean if CommonServiceItemIcon is CommonServiceItemIcon1.
func (s CommonServiceItemIcon) GetCommonServiceItemIcon1() (v CommonServiceItemIcon1, ok bool) {
	if !s.IsCommonServiceItemIcon1() {
		return v, false
	}
	return s.CommonServiceItemIcon1, true
}

// NewCommonServiceItemIcon1CommonServiceItemIcon returns new CommonServiceItemIcon from CommonServiceItemIcon1.
func NewCommonServiceItemIcon1CommonServiceItemIcon(v CommonServiceItemIcon1) CommonServiceItemIcon {
	var s CommonServiceItemIcon
	s.SetCommonServiceItemIcon1(v)
	return s
}

type CommonServiceItemIcon1 struct {
	ID    OptString `json:"ID"`
	URL   OptString `json:"URL"`
	Name  OptString `json:"Name"`
	Scope OptString `json:"Scope"`
	Tags  []string  `json:"Tags"`
}

// GetID returns the value of ID.
func (s *CommonServiceItemIcon1) GetID() OptString {
	return s.ID
}

// GetURL returns the value of URL.
func (s *CommonServiceItemIcon1) GetURL() OptString {
	return s.URL
}

// GetName returns the value of Name.
func (s *CommonServiceItemIcon1) GetName() OptString {
	return s.Name
}

// GetScope returns the value of Scope.
func (s *CommonServiceItemIcon1) GetScope() OptString {
	return s.Scope
}

// GetTags returns the value of Tags.
func (s *CommonServiceItemIcon1) GetTags() []string {
	return s.Tags
}

// SetID sets the value of ID.
func (s *CommonServiceItemIcon1) SetID(val OptString) {
	s.ID = val
}

// SetURL sets the value of URL.
func (s *CommonServiceItemIcon1) SetURL(val OptString) {
	s.URL = val
}

// SetName sets the value of Name.
func (s *CommonServiceItemIcon1) SetName(val OptString) {
	s.Name = val
}

// SetScope sets the value of Scope.
func (s *CommonServiceItemIcon1) SetScope(val OptString) {
	s.Scope = val
}

// SetTags sets the value of Tags.
func (s *CommonServiceItemIcon1) SetTags(val []string) {
	s.Tags = val
}

type ConfigQueueBadRequest Error

func (*ConfigQueueBadRequest) configQueueRes() {}

type ConfigQueueInternalServerError Error

func (*ConfigQueueInternalServerError) configQueueRes() {}

type ConfigQueueNotFound Error

func (*ConfigQueueNotFound) configQueueRes() {}

type ConfigQueueOK struct {
	CommonServiceItem CommonServiceItem `json:"CommonServiceItem"`
	Success           OptBool           `json:"Success"`
	IsOk              OptBool           `json:"is_ok"`
}

// GetCommonServiceItem returns the value of CommonServiceItem.
func (s *ConfigQueueOK) GetCommonServiceItem() CommonServiceItem {
	return s.CommonServiceItem
}

// GetSuccess returns the value of Success.
func (s *ConfigQueueOK) GetSuccess() OptBool {
	return s.Success
}

// GetIsOk returns the value of IsOk.
func (s *ConfigQueueOK) GetIsOk() OptBool {
	return s.IsOk
}

// SetCommonServiceItem sets the value of CommonServiceItem.
func (s *ConfigQueueOK) SetCommonServiceItem(val CommonServiceItem) {
	s.CommonServiceItem = val
}

// SetSuccess sets the value of Success.
func (s *ConfigQueueOK) SetSuccess(val OptBool) {
	s.Success = val
}

// SetIsOk sets the value of IsOk.
func (s *ConfigQueueOK) SetIsOk(val OptBool) {
	s.IsOk = val
}

func (*ConfigQueueOK) configQueueRes() {}

// Ref: #/components/schemas/ConfigQueueRequest
type ConfigQueueRequest struct {
	CommonServiceItem ConfigQueueRequestCommonServiceItem `json:"CommonServiceItem"`
}

// GetCommonServiceItem returns the value of CommonServiceItem.
func (s *ConfigQueueRequest) GetCommonServiceItem() ConfigQueueRequestCommonServiceItem {
	return s.CommonServiceItem
}

// SetCommonServiceItem sets the value of CommonServiceItem.
func (s *ConfigQueueRequest) SetCommonServiceItem(val ConfigQueueRequestCommonServiceItem) {
	s.CommonServiceItem = val
}

type ConfigQueueRequestCommonServiceItem struct {
	Description OptString                                   `json:"Description"`
	Settings    ConfigQueueRequestCommonServiceItemSettings `json:"Settings"`
}

// GetDescription returns the value of Description.
func (s *ConfigQueueRequestCommonServiceItem) GetDescription() OptString {
	return s.Description
}

// GetSettings returns the value of Settings.
func (s *ConfigQueueRequestCommonServiceItem) GetSettings() ConfigQueueRequestCommonServiceItemSettings {
	return s.Settings
}

// SetDescription sets the value of Description.
func (s *ConfigQueueRequestCommonServiceItem) SetDescription(val OptString) {
	s.Description = val
}

// SetSettings sets the value of Settings.
func (s *ConfigQueueRequestCommonServiceItem) SetSettings(val ConfigQueueRequestCommonServiceItemSettings) {
	s.Settings = val
}

type ConfigQueueRequestCommonServiceItemSettings struct {
	VisibilityTimeoutSeconds int `json:"VisibilityTimeoutSeconds"`
	ExpireSeconds            int `json:"ExpireSeconds"`
}

// GetVisibilityTimeoutSeconds returns the value of VisibilityTimeoutSeconds.
func (s *ConfigQueueRequestCommonServiceItemSettings) GetVisibilityTimeoutSeconds() int {
	return s.VisibilityTimeoutSeconds
}

// GetExpireSeconds returns the value of ExpireSeconds.
func (s *ConfigQueueRequestCommonServiceItemSettings) GetExpireSeconds() int {
	return s.ExpireSeconds
}

// SetVisibilityTimeoutSeconds sets the value of VisibilityTimeoutSeconds.
func (s *ConfigQueueRequestCommonServiceItemSettings) SetVisibilityTimeoutSeconds(val int) {
	s.VisibilityTimeoutSeconds = val
}

// SetExpireSeconds sets the value of ExpireSeconds.
func (s *ConfigQueueRequestCommonServiceItemSettings) SetExpireSeconds(val int) {
	s.ExpireSeconds = val
}

type ConfigQueueUnauthorized Error

func (*ConfigQueueUnauthorized) configQueueRes() {}

type CreateQueueBadRequest Error

func (*CreateQueueBadRequest) createQueueRes() {}

type CreateQueueConflict Error

func (*CreateQueueConflict) createQueueRes() {}

type CreateQueueCreated struct {
	CommonServiceItem CommonServiceItem `json:"CommonServiceItem"`
	Success           OptBool           `json:"Success"`
	IsOk              OptBool           `json:"is_ok"`
}

// GetCommonServiceItem returns the value of CommonServiceItem.
func (s *CreateQueueCreated) GetCommonServiceItem() CommonServiceItem {
	return s.CommonServiceItem
}

// GetSuccess returns the value of Success.
func (s *CreateQueueCreated) GetSuccess() OptBool {
	return s.Success
}

// GetIsOk returns the value of IsOk.
func (s *CreateQueueCreated) GetIsOk() OptBool {
	return s.IsOk
}

// SetCommonServiceItem sets the value of CommonServiceItem.
func (s *CreateQueueCreated) SetCommonServiceItem(val CommonServiceItem) {
	s.CommonServiceItem = val
}

// SetSuccess sets the value of Success.
func (s *CreateQueueCreated) SetSuccess(val OptBool) {
	s.Success = val
}

// SetIsOk sets the value of IsOk.
func (s *CreateQueueCreated) SetIsOk(val OptBool) {
	s.IsOk = val
}

func (*CreateQueueCreated) createQueueRes() {}

type CreateQueueInternalServerError Error

func (*CreateQueueInternalServerError) createQueueRes() {}

// Ref: #/components/schemas/CreateQueueRequest
type CreateQueueRequest struct {
	CommonServiceItem CreateQueueRequestCommonServiceItem `json:"CommonServiceItem"`
}

// GetCommonServiceItem returns the value of CommonServiceItem.
func (s *CreateQueueRequest) GetCommonServiceItem() CreateQueueRequestCommonServiceItem {
	return s.CommonServiceItem
}

// SetCommonServiceItem sets the value of CommonServiceItem.
func (s *CreateQueueRequest) SetCommonServiceItem(val CreateQueueRequestCommonServiceItem) {
	s.CommonServiceItem = val
}

type CreateQueueRequestCommonServiceItem struct {
	Name        QueueName                                   `json:"Name"`
	Description OptString                                   `json:"Description"`
	Provider    CreateQueueRequestCommonServiceItemProvider `json:"Provider"`
}

// GetName returns the value of Name.
func (s *CreateQueueRequestCommonServiceItem) GetName() QueueName {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *CreateQueueRequestCommonServiceItem) GetDescription() OptString {
	return s.Description
}

// GetProvider returns the value of Provider.
func (s *CreateQueueRequestCommonServiceItem) GetProvider() CreateQueueRequestCommonServiceItemProvider {
	return s.Provider
}

// SetName sets the value of Name.
func (s *CreateQueueRequestCommonServiceItem) SetName(val QueueName) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *CreateQueueRequestCommonServiceItem) SetDescription(val OptString) {
	s.Description = val
}

// SetProvider sets the value of Provider.
func (s *CreateQueueRequestCommonServiceItem) SetProvider(val CreateQueueRequestCommonServiceItemProvider) {
	s.Provider = val
}

type CreateQueueRequestCommonServiceItemProvider struct {
	Class OptCreateQueueRequestCommonServiceItemProviderClass `json:"Class"`
}

// GetClass returns the value of Class.
func (s *CreateQueueRequestCommonServiceItemProvider) GetClass() OptCreateQueueRequestCommonServiceItemProviderClass {
	return s.Class
}

// SetClass sets the value of Class.
func (s *CreateQueueRequestCommonServiceItemProvider) SetClass(val OptCreateQueueRequestCommonServiceItemProviderClass) {
	s.Class = val
}

type CreateQueueRequestCommonServiceItemProviderClass string

const (
	CreateQueueRequestCommonServiceItemProviderClassSimplemq CreateQueueRequestCommonServiceItemProviderClass = "simplemq"
)

// AllValues returns all CreateQueueRequestCommonServiceItemProviderClass values.
func (CreateQueueRequestCommonServiceItemProviderClass) AllValues() []CreateQueueRequestCommonServiceItemProviderClass {
	return []CreateQueueRequestCommonServiceItemProviderClass{
		CreateQueueRequestCommonServiceItemProviderClassSimplemq,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CreateQueueRequestCommonServiceItemProviderClass) MarshalText() ([]byte, error) {
	switch s {
	case CreateQueueRequestCommonServiceItemProviderClassSimplemq:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreateQueueRequestCommonServiceItemProviderClass) UnmarshalText(data []byte) error {
	switch CreateQueueRequestCommonServiceItemProviderClass(data) {
	case CreateQueueRequestCommonServiceItemProviderClassSimplemq:
		*s = CreateQueueRequestCommonServiceItemProviderClassSimplemq
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type CreateQueueUnauthorized Error

func (*CreateQueueUnauthorized) createQueueRes() {}

type DeleteQueueBadRequest Error

func (*DeleteQueueBadRequest) deleteQueueRes() {}

type DeleteQueueInternalServerError Error

func (*DeleteQueueInternalServerError) deleteQueueRes() {}

type DeleteQueueNotFound Error

func (*DeleteQueueNotFound) deleteQueueRes() {}

type DeleteQueueOK struct {
	CommonServiceItem CommonServiceItem `json:"CommonServiceItem"`
	Success           OptBool           `json:"Success"`
	IsOk              OptBool           `json:"is_ok"`
}

// GetCommonServiceItem returns the value of CommonServiceItem.
func (s *DeleteQueueOK) GetCommonServiceItem() CommonServiceItem {
	return s.CommonServiceItem
}

// GetSuccess returns the value of Success.
func (s *DeleteQueueOK) GetSuccess() OptBool {
	return s.Success
}

// GetIsOk returns the value of IsOk.
func (s *DeleteQueueOK) GetIsOk() OptBool {
	return s.IsOk
}

// SetCommonServiceItem sets the value of CommonServiceItem.
func (s *DeleteQueueOK) SetCommonServiceItem(val CommonServiceItem) {
	s.CommonServiceItem = val
}

// SetSuccess sets the value of Success.
func (s *DeleteQueueOK) SetSuccess(val OptBool) {
	s.Success = val
}

// SetIsOk sets the value of IsOk.
func (s *DeleteQueueOK) SetIsOk(val OptBool) {
	s.IsOk = val
}

func (*DeleteQueueOK) deleteQueueRes() {}

type DeleteQueueUnauthorized Error

func (*DeleteQueueUnauthorized) deleteQueueRes() {}

// Ref: #/components/schemas/Error
type Error struct {
	IsFatal   OptBool   `json:"is_fatal"`
	Serial    OptString `json:"serial"`
	Status    OptString `json:"status"`
	ErrorCode OptString `json:"error_code"`
	ErrorMsg  OptString `json:"error_msg"`
}

// GetIsFatal returns the value of IsFatal.
func (s *Error) GetIsFatal() OptBool {
	return s.IsFatal
}

// GetSerial returns the value of Serial.
func (s *Error) GetSerial() OptString {
	return s.Serial
}

// GetStatus returns the value of Status.
func (s *Error) GetStatus() OptString {
	return s.Status
}

// GetErrorCode returns the value of ErrorCode.
func (s *Error) GetErrorCode() OptString {
	return s.ErrorCode
}

// GetErrorMsg returns the value of ErrorMsg.
func (s *Error) GetErrorMsg() OptString {
	return s.ErrorMsg
}

// SetIsFatal sets the value of IsFatal.
func (s *Error) SetIsFatal(val OptBool) {
	s.IsFatal = val
}

// SetSerial sets the value of Serial.
func (s *Error) SetSerial(val OptString) {
	s.Serial = val
}

// SetStatus sets the value of Status.
func (s *Error) SetStatus(val OptString) {
	s.Status = val
}

// SetErrorCode sets the value of ErrorCode.
func (s *Error) SetErrorCode(val OptString) {
	s.ErrorCode = val
}

// SetErrorMsg sets the value of ErrorMsg.
func (s *Error) SetErrorMsg(val OptString) {
	s.ErrorMsg = val
}

type GetMessageCountBadRequest Error

func (*GetMessageCountBadRequest) getMessageCountRes() {}

type GetMessageCountInternalServerError Error

func (*GetMessageCountInternalServerError) getMessageCountRes() {}

type GetMessageCountNotFound Error

func (*GetMessageCountNotFound) getMessageCountRes() {}

type GetMessageCountOK struct {
	SimpleMQ GetMessageCountOKSimpleMQ `json:"SimpleMQ"`
	IsOk     OptBool                   `json:"is_ok"`
}

// GetSimpleMQ returns the value of SimpleMQ.
func (s *GetMessageCountOK) GetSimpleMQ() GetMessageCountOKSimpleMQ {
	return s.SimpleMQ
}

// GetIsOk returns the value of IsOk.
func (s *GetMessageCountOK) GetIsOk() OptBool {
	return s.IsOk
}

// SetSimpleMQ sets the value of SimpleMQ.
func (s *GetMessageCountOK) SetSimpleMQ(val GetMessageCountOKSimpleMQ) {
	s.SimpleMQ = val
}

// SetIsOk sets the value of IsOk.
func (s *GetMessageCountOK) SetIsOk(val OptBool) {
	s.IsOk = val
}

func (*GetMessageCountOK) getMessageCountRes() {}

type GetMessageCountOKSimpleMQ struct {
	Result OptString `json:"result"`
	Count  int       `json:"count"`
}

// GetResult returns the value of Result.
func (s *GetMessageCountOKSimpleMQ) GetResult() OptString {
	return s.Result
}

// GetCount returns the value of Count.
func (s *GetMessageCountOKSimpleMQ) GetCount() int {
	return s.Count
}

// SetResult sets the value of Result.
func (s *GetMessageCountOKSimpleMQ) SetResult(val OptString) {
	s.Result = val
}

// SetCount sets the value of Count.
func (s *GetMessageCountOKSimpleMQ) SetCount(val int) {
	s.Count = val
}

type GetMessageCountUnauthorized Error

func (*GetMessageCountUnauthorized) getMessageCountRes() {}

type GetQueueBadRequest Error

func (*GetQueueBadRequest) getQueueRes() {}

type GetQueueInternalServerError Error

func (*GetQueueInternalServerError) getQueueRes() {}

type GetQueueNotFound Error

func (*GetQueueNotFound) getQueueRes() {}

type GetQueueOK struct {
	CommonServiceItem CommonServiceItem `json:"CommonServiceItem"`
	IsOk              OptBool           `json:"is_ok"`
}

// GetCommonServiceItem returns the value of CommonServiceItem.
func (s *GetQueueOK) GetCommonServiceItem() CommonServiceItem {
	return s.CommonServiceItem
}

// GetIsOk returns the value of IsOk.
func (s *GetQueueOK) GetIsOk() OptBool {
	return s.IsOk
}

// SetCommonServiceItem sets the value of CommonServiceItem.
func (s *GetQueueOK) SetCommonServiceItem(val CommonServiceItem) {
	s.CommonServiceItem = val
}

// SetIsOk sets the value of IsOk.
func (s *GetQueueOK) SetIsOk(val OptBool) {
	s.IsOk = val
}

func (*GetQueueOK) getQueueRes() {}

type GetQueueUnauthorized Error

func (*GetQueueUnauthorized) getQueueRes() {}

type GetQueuesBadRequest Error

func (*GetQueuesBadRequest) getQueuesRes() {}

type GetQueuesInternalServerError Error

func (*GetQueuesInternalServerError) getQueuesRes() {}

type GetQueuesOK struct {
	From               OptInt              `json:"From"`
	Count              OptInt              `json:"Count"`
	Total              OptInt              `json:"Total"`
	CommonServiceItems []CommonServiceItem `json:"CommonServiceItems"`
	IsOk               OptBool             `json:"is_ok"`
}

// GetFrom returns the value of From.
func (s *GetQueuesOK) GetFrom() OptInt {
	return s.From
}

// GetCount returns the value of Count.
func (s *GetQueuesOK) GetCount() OptInt {
	return s.Count
}

// GetTotal returns the value of Total.
func (s *GetQueuesOK) GetTotal() OptInt {
	return s.Total
}

// GetCommonServiceItems returns the value of CommonServiceItems.
func (s *GetQueuesOK) GetCommonServiceItems() []CommonServiceItem {
	return s.CommonServiceItems
}

// GetIsOk returns the value of IsOk.
func (s *GetQueuesOK) GetIsOk() OptBool {
	return s.IsOk
}

// SetFrom sets the value of From.
func (s *GetQueuesOK) SetFrom(val OptInt) {
	s.From = val
}

// SetCount sets the value of Count.
func (s *GetQueuesOK) SetCount(val OptInt) {
	s.Count = val
}

// SetTotal sets the value of Total.
func (s *GetQueuesOK) SetTotal(val OptInt) {
	s.Total = val
}

// SetCommonServiceItems sets the value of CommonServiceItems.
func (s *GetQueuesOK) SetCommonServiceItems(val []CommonServiceItem) {
	s.CommonServiceItems = val
}

// SetIsOk sets the value of IsOk.
func (s *GetQueuesOK) SetIsOk(val OptBool) {
	s.IsOk = val
}

func (*GetQueuesOK) getQueuesRes() {}

type GetQueuesUnauthorized Error

func (*GetQueuesUnauthorized) getQueuesRes() {}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptClearQueueOKSimpleMQ returns new OptClearQueueOKSimpleMQ with value set to v.
func NewOptClearQueueOKSimpleMQ(v ClearQueueOKSimpleMQ) OptClearQueueOKSimpleMQ {
	return OptClearQueueOKSimpleMQ{
		Value: v,
		Set:   true,
	}
}

// OptClearQueueOKSimpleMQ is optional ClearQueueOKSimpleMQ.
type OptClearQueueOKSimpleMQ struct {
	Value ClearQueueOKSimpleMQ
	Set   bool
}

// IsSet returns true if OptClearQueueOKSimpleMQ was set.
func (o OptClearQueueOKSimpleMQ) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptClearQueueOKSimpleMQ) Reset() {
	var v ClearQueueOKSimpleMQ
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptClearQueueOKSimpleMQ) SetTo(v ClearQueueOKSimpleMQ) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptClearQueueOKSimpleMQ) Get() (v ClearQueueOKSimpleMQ, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptClearQueueOKSimpleMQ) Or(d ClearQueueOKSimpleMQ) ClearQueueOKSimpleMQ {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCommonServiceItemDescription returns new OptCommonServiceItemDescription with value set to v.
func NewOptCommonServiceItemDescription(v CommonServiceItemDescription) OptCommonServiceItemDescription {
	return OptCommonServiceItemDescription{
		Value: v,
		Set:   true,
	}
}

// OptCommonServiceItemDescription is optional CommonServiceItemDescription.
type OptCommonServiceItemDescription struct {
	Value CommonServiceItemDescription
	Set   bool
}

// IsSet returns true if OptCommonServiceItemDescription was set.
func (o OptCommonServiceItemDescription) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCommonServiceItemDescription) Reset() {
	var v CommonServiceItemDescription
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCommonServiceItemDescription) SetTo(v CommonServiceItemDescription) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCommonServiceItemDescription) Get() (v CommonServiceItemDescription, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCommonServiceItemDescription) Or(d CommonServiceItemDescription) CommonServiceItemDescription {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCommonServiceItemIcon returns new OptCommonServiceItemIcon with value set to v.
func NewOptCommonServiceItemIcon(v CommonServiceItemIcon) OptCommonServiceItemIcon {
	return OptCommonServiceItemIcon{
		Value: v,
		Set:   true,
	}
}

// OptCommonServiceItemIcon is optional CommonServiceItemIcon.
type OptCommonServiceItemIcon struct {
	Value CommonServiceItemIcon
	Set   bool
}

// IsSet returns true if OptCommonServiceItemIcon was set.
func (o OptCommonServiceItemIcon) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCommonServiceItemIcon) Reset() {
	var v CommonServiceItemIcon
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCommonServiceItemIcon) SetTo(v CommonServiceItemIcon) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCommonServiceItemIcon) Get() (v CommonServiceItemIcon, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCommonServiceItemIcon) Or(d CommonServiceItemIcon) CommonServiceItemIcon {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateQueueRequestCommonServiceItemProviderClass returns new OptCreateQueueRequestCommonServiceItemProviderClass with value set to v.
func NewOptCreateQueueRequestCommonServiceItemProviderClass(v CreateQueueRequestCommonServiceItemProviderClass) OptCreateQueueRequestCommonServiceItemProviderClass {
	return OptCreateQueueRequestCommonServiceItemProviderClass{
		Value: v,
		Set:   true,
	}
}

// OptCreateQueueRequestCommonServiceItemProviderClass is optional CreateQueueRequestCommonServiceItemProviderClass.
type OptCreateQueueRequestCommonServiceItemProviderClass struct {
	Value CreateQueueRequestCommonServiceItemProviderClass
	Set   bool
}

// IsSet returns true if OptCreateQueueRequestCommonServiceItemProviderClass was set.
func (o OptCreateQueueRequestCommonServiceItemProviderClass) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateQueueRequestCommonServiceItemProviderClass) Reset() {
	var v CreateQueueRequestCommonServiceItemProviderClass
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateQueueRequestCommonServiceItemProviderClass) SetTo(v CreateQueueRequestCommonServiceItemProviderClass) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateQueueRequestCommonServiceItemProviderClass) Get() (v CreateQueueRequestCommonServiceItemProviderClass, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateQueueRequestCommonServiceItemProviderClass) Or(d CreateQueueRequestCommonServiceItemProviderClass) CreateQueueRequestCommonServiceItemProviderClass {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/Provider
type Provider struct {
	ID           int           `json:"ID"`
	Class        ProviderClass `json:"Class"`
	Name         string        `json:"Name"`
	ServiceClass string        `json:"ServiceClass"`
}

// GetID returns the value of ID.
func (s *Provider) GetID() int {
	return s.ID
}

// GetClass returns the value of Class.
func (s *Provider) GetClass() ProviderClass {
	return s.Class
}

// GetName returns the value of Name.
func (s *Provider) GetName() string {
	return s.Name
}

// GetServiceClass returns the value of ServiceClass.
func (s *Provider) GetServiceClass() string {
	return s.ServiceClass
}

// SetID sets the value of ID.
func (s *Provider) SetID(val int) {
	s.ID = val
}

// SetClass sets the value of Class.
func (s *Provider) SetClass(val ProviderClass) {
	s.Class = val
}

// SetName sets the value of Name.
func (s *Provider) SetName(val string) {
	s.Name = val
}

// SetServiceClass sets the value of ServiceClass.
func (s *Provider) SetServiceClass(val string) {
	s.ServiceClass = val
}

type ProviderClass string

const (
	ProviderClassSimplemq ProviderClass = "simplemq"
)

// AllValues returns all ProviderClass values.
func (ProviderClass) AllValues() []ProviderClass {
	return []ProviderClass{
		ProviderClassSimplemq,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ProviderClass) MarshalText() ([]byte, error) {
	switch s {
	case ProviderClassSimplemq:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ProviderClass) UnmarshalText(data []byte) error {
	switch ProviderClass(data) {
	case ProviderClassSimplemq:
		*s = ProviderClassSimplemq
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type QueueName string

type RotateAPIKeyBadRequest Error

func (*RotateAPIKeyBadRequest) rotateAPIKeyRes() {}

type RotateAPIKeyInternalServerError Error

func (*RotateAPIKeyInternalServerError) rotateAPIKeyRes() {}

type RotateAPIKeyNotFound Error

func (*RotateAPIKeyNotFound) rotateAPIKeyRes() {}

type RotateAPIKeyOK struct {
	SimpleMQ RotateAPIKeyOKSimpleMQ `json:"SimpleMQ"`
	IsOk     OptBool                `json:"is_ok"`
}

// GetSimpleMQ returns the value of SimpleMQ.
func (s *RotateAPIKeyOK) GetSimpleMQ() RotateAPIKeyOKSimpleMQ {
	return s.SimpleMQ
}

// GetIsOk returns the value of IsOk.
func (s *RotateAPIKeyOK) GetIsOk() OptBool {
	return s.IsOk
}

// SetSimpleMQ sets the value of SimpleMQ.
func (s *RotateAPIKeyOK) SetSimpleMQ(val RotateAPIKeyOKSimpleMQ) {
	s.SimpleMQ = val
}

// SetIsOk sets the value of IsOk.
func (s *RotateAPIKeyOK) SetIsOk(val OptBool) {
	s.IsOk = val
}

func (*RotateAPIKeyOK) rotateAPIKeyRes() {}

type RotateAPIKeyOKSimpleMQ struct {
	Result OptString `json:"result"`
	Apikey string    `json:"apikey"`
}

// GetResult returns the value of Result.
func (s *RotateAPIKeyOKSimpleMQ) GetResult() OptString {
	return s.Result
}

// GetApikey returns the value of Apikey.
func (s *RotateAPIKeyOKSimpleMQ) GetApikey() string {
	return s.Apikey
}

// SetResult sets the value of Result.
func (s *RotateAPIKeyOKSimpleMQ) SetResult(val OptString) {
	s.Result = val
}

// SetApikey sets the value of Apikey.
func (s *RotateAPIKeyOKSimpleMQ) SetApikey(val string) {
	s.Apikey = val
}

type RotateAPIKeyUnauthorized Error

func (*RotateAPIKeyUnauthorized) rotateAPIKeyRes() {}

// Ref: #/components/schemas/Settings
type Settings struct {
	// 可視性タイムアウト (秒).
	VisibilityTimeoutSeconds int `json:"VisibilityTimeoutSeconds"`
	// 未処理メッセージ保存期間 (秒).
	ExpireSeconds int `json:"ExpireSeconds"`
}

// GetVisibilityTimeoutSeconds returns the value of VisibilityTimeoutSeconds.
func (s *Settings) GetVisibilityTimeoutSeconds() int {
	return s.VisibilityTimeoutSeconds
}

// GetExpireSeconds returns the value of ExpireSeconds.
func (s *Settings) GetExpireSeconds() int {
	return s.ExpireSeconds
}

// SetVisibilityTimeoutSeconds sets the value of VisibilityTimeoutSeconds.
func (s *Settings) SetVisibilityTimeoutSeconds(val int) {
	s.VisibilityTimeoutSeconds = val
}

// SetExpireSeconds sets the value of ExpireSeconds.
func (s *Settings) SetExpireSeconds(val int) {
	s.ExpireSeconds = val
}

// Ref: #/components/schemas/Status
type Status struct {
	// キュー名.
	QueueName string `json:"QueueName"`
}

// GetQueueName returns the value of QueueName.
func (s *Status) GetQueueName() string {
	return s.QueueName
}

// SetQueueName sets the value of QueueName.
func (s *Status) SetQueueName(val string) {
	s.QueueName = val
}
