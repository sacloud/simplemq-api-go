// Code generated by ogen, DO NOT EDIT.

package queue

import (
	"time"
)

// SetFake set fake values.
func (s *ClearQueueBadRequest) SetFake() {
	var unwrapped Error
	{
		unwrapped.SetFake()
	}
	*s = ClearQueueBadRequest(unwrapped)
}

// SetFake set fake values.
func (s *ClearQueueInternalServerError) SetFake() {
	var unwrapped Error
	{
		unwrapped.SetFake()
	}
	*s = ClearQueueInternalServerError(unwrapped)
}

// SetFake set fake values.
func (s *ClearQueueNotFound) SetFake() {
	var unwrapped Error
	{
		unwrapped.SetFake()
	}
	*s = ClearQueueNotFound(unwrapped)
}

// SetFake set fake values.
func (s *ClearQueueOK) SetFake() {
	{
		{
			s.SimpleMQ.SetFake()
		}
	}
	{
		{
			s.IsOk.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ClearQueueOKSimpleMQ) SetFake() {
	{
		{
			s.Result.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ClearQueueUnauthorized) SetFake() {
	var unwrapped Error
	{
		unwrapped.SetFake()
	}
	*s = ClearQueueUnauthorized(unwrapped)
}

// SetFake set fake values.
func (s *CommonServiceItem) SetFake() {
	{
		{
			s.ID.SetFake()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Settings.SetFake()
		}
	}
	{
		{
			s.SettingsHash = "string"
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.ServiceClass = "string"
		}
	}
	{
		{
			s.Availability = "string"
		}
	}
	{
		{
			s.CreatedAt = time.Now()
		}
	}
	{
		{
			s.ModifiedAt = time.Now()
		}
	}
	{
		{
			s.Provider.SetFake()
		}
	}
	{
		{
			s.Icon.SetFake()
		}
	}
	{
		{
			s.Tags = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Tags = append(s.Tags, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *CommonServiceItemDescription) SetFake() {
	var variant string

	{
		variant = "string"
	}
	s.SetString(variant)
}

// SetFake set fake values.
func (s *CommonServiceItemID) SetFake() {
	var variant string

	{
		variant = "string"
	}
	s.SetString(variant)
}

// SetFake set fake values.
func (s *ConfigQueueBadRequest) SetFake() {
	var unwrapped Error
	{
		unwrapped.SetFake()
	}
	*s = ConfigQueueBadRequest(unwrapped)
}

// SetFake set fake values.
func (s *ConfigQueueInternalServerError) SetFake() {
	var unwrapped Error
	{
		unwrapped.SetFake()
	}
	*s = ConfigQueueInternalServerError(unwrapped)
}

// SetFake set fake values.
func (s *ConfigQueueNotFound) SetFake() {
	var unwrapped Error
	{
		unwrapped.SetFake()
	}
	*s = ConfigQueueNotFound(unwrapped)
}

// SetFake set fake values.
func (s *ConfigQueueOK) SetFake() {
	{
		{
			s.CommonServiceItem.SetFake()
		}
	}
	{
		{
			s.Success.SetFake()
		}
	}
	{
		{
			s.IsOk.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ConfigQueueRequest) SetFake() {
	{
		{
			s.CommonServiceItem.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ConfigQueueRequestCommonServiceItem) SetFake() {
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Settings.SetFake()
		}
	}
	{
		{
			s.Tags = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Tags = append(s.Tags, elem)
			}
		}
	}
	{
		{
			s.Icon.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *ConfigQueueUnauthorized) SetFake() {
	var unwrapped Error
	{
		unwrapped.SetFake()
	}
	*s = ConfigQueueUnauthorized(unwrapped)
}

// SetFake set fake values.
func (s *CreateQueueBadRequest) SetFake() {
	var unwrapped Error
	{
		unwrapped.SetFake()
	}
	*s = CreateQueueBadRequest(unwrapped)
}

// SetFake set fake values.
func (s *CreateQueueConflict) SetFake() {
	var unwrapped Error
	{
		unwrapped.SetFake()
	}
	*s = CreateQueueConflict(unwrapped)
}

// SetFake set fake values.
func (s *CreateQueueCreated) SetFake() {
	{
		{
			s.CommonServiceItem.SetFake()
		}
	}
	{
		{
			s.Success.SetFake()
		}
	}
	{
		{
			s.IsOk.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateQueueInternalServerError) SetFake() {
	var unwrapped Error
	{
		unwrapped.SetFake()
	}
	*s = CreateQueueInternalServerError(unwrapped)
}

// SetFake set fake values.
func (s *CreateQueueRequest) SetFake() {
	{
		{
			s.CommonServiceItem.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateQueueRequestCommonServiceItem) SetFake() {
	{
		{
			s.Name.SetFake()
		}
	}
	{
		{
			s.Description.SetFake()
		}
	}
	{
		{
			s.Provider.SetFake()
		}
	}
	{
		{
			s.Tags = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Tags = append(s.Tags, elem)
			}
		}
	}
	{
		{
			s.Icon.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateQueueRequestCommonServiceItemProvider) SetFake() {
	{
		{
			s.Class.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *CreateQueueRequestCommonServiceItemProviderClass) SetFake() {
	*s = CreateQueueRequestCommonServiceItemProviderClassSimplemq
}

// SetFake set fake values.
func (s *CreateQueueUnauthorized) SetFake() {
	var unwrapped Error
	{
		unwrapped.SetFake()
	}
	*s = CreateQueueUnauthorized(unwrapped)
}

// SetFake set fake values.
func (s *DeleteQueueBadRequest) SetFake() {
	var unwrapped Error
	{
		unwrapped.SetFake()
	}
	*s = DeleteQueueBadRequest(unwrapped)
}

// SetFake set fake values.
func (s *DeleteQueueInternalServerError) SetFake() {
	var unwrapped Error
	{
		unwrapped.SetFake()
	}
	*s = DeleteQueueInternalServerError(unwrapped)
}

// SetFake set fake values.
func (s *DeleteQueueNotFound) SetFake() {
	var unwrapped Error
	{
		unwrapped.SetFake()
	}
	*s = DeleteQueueNotFound(unwrapped)
}

// SetFake set fake values.
func (s *DeleteQueueOK) SetFake() {
	{
		{
			s.CommonServiceItem.SetFake()
		}
	}
	{
		{
			s.Success.SetFake()
		}
	}
	{
		{
			s.IsOk.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *DeleteQueueUnauthorized) SetFake() {
	var unwrapped Error
	{
		unwrapped.SetFake()
	}
	*s = DeleteQueueUnauthorized(unwrapped)
}

// SetFake set fake values.
func (s *Error) SetFake() {
	{
		{
			s.IsFatal.SetFake()
		}
	}
	{
		{
			s.Serial.SetFake()
		}
	}
	{
		{
			s.Status.SetFake()
		}
	}
	{
		{
			s.ErrorCode.SetFake()
		}
	}
	{
		{
			s.ErrorMsg.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetMessageCountBadRequest) SetFake() {
	var unwrapped Error
	{
		unwrapped.SetFake()
	}
	*s = GetMessageCountBadRequest(unwrapped)
}

// SetFake set fake values.
func (s *GetMessageCountInternalServerError) SetFake() {
	var unwrapped Error
	{
		unwrapped.SetFake()
	}
	*s = GetMessageCountInternalServerError(unwrapped)
}

// SetFake set fake values.
func (s *GetMessageCountNotFound) SetFake() {
	var unwrapped Error
	{
		unwrapped.SetFake()
	}
	*s = GetMessageCountNotFound(unwrapped)
}

// SetFake set fake values.
func (s *GetMessageCountOK) SetFake() {
	{
		{
			s.SimpleMQ.SetFake()
		}
	}
	{
		{
			s.IsOk.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetMessageCountOKSimpleMQ) SetFake() {
	{
		{
			s.Result.SetFake()
		}
	}
	{
		{
			s.Count = int(0)
		}
	}
}

// SetFake set fake values.
func (s *GetMessageCountUnauthorized) SetFake() {
	var unwrapped Error
	{
		unwrapped.SetFake()
	}
	*s = GetMessageCountUnauthorized(unwrapped)
}

// SetFake set fake values.
func (s *GetQueueBadRequest) SetFake() {
	var unwrapped Error
	{
		unwrapped.SetFake()
	}
	*s = GetQueueBadRequest(unwrapped)
}

// SetFake set fake values.
func (s *GetQueueInternalServerError) SetFake() {
	var unwrapped Error
	{
		unwrapped.SetFake()
	}
	*s = GetQueueInternalServerError(unwrapped)
}

// SetFake set fake values.
func (s *GetQueueNotFound) SetFake() {
	var unwrapped Error
	{
		unwrapped.SetFake()
	}
	*s = GetQueueNotFound(unwrapped)
}

// SetFake set fake values.
func (s *GetQueueOK) SetFake() {
	{
		{
			s.CommonServiceItem.SetFake()
		}
	}
	{
		{
			s.IsOk.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetQueueUnauthorized) SetFake() {
	var unwrapped Error
	{
		unwrapped.SetFake()
	}
	*s = GetQueueUnauthorized(unwrapped)
}

// SetFake set fake values.
func (s *GetQueuesBadRequest) SetFake() {
	var unwrapped Error
	{
		unwrapped.SetFake()
	}
	*s = GetQueuesBadRequest(unwrapped)
}

// SetFake set fake values.
func (s *GetQueuesInternalServerError) SetFake() {
	var unwrapped Error
	{
		unwrapped.SetFake()
	}
	*s = GetQueuesInternalServerError(unwrapped)
}

// SetFake set fake values.
func (s *GetQueuesOK) SetFake() {
	{
		{
			s.From.SetFake()
		}
	}
	{
		{
			s.Count.SetFake()
		}
	}
	{
		{
			s.Total.SetFake()
		}
	}
	{
		{
			s.CommonServiceItems = nil
			for i := 0; i < 0; i++ {
				var elem CommonServiceItem
				{
					elem.SetFake()
				}
				s.CommonServiceItems = append(s.CommonServiceItems, elem)
			}
		}
	}
	{
		{
			s.IsOk.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *GetQueuesUnauthorized) SetFake() {
	var unwrapped Error
	{
		unwrapped.SetFake()
	}
	*s = GetQueuesUnauthorized(unwrapped)
}

// SetFake set fake values.
func (s *Icon) SetFake() {
	var variant struct{}

	{
		variant = struct{}{}
	}
	s.SetNull(variant)
}

// SetFake set fake values.
func (s *Icon1) SetFake() {
	{
		{
			s.ID.SetFake()
		}
	}
	{
		{
			s.URL.SetFake()
		}
	}
	{
		{
			s.Name.SetFake()
		}
	}
	{
		{
			s.Scope.SetFake()
		}
	}
	{
		{
			s.Tags = nil
			for i := 0; i < 0; i++ {
				var elem string
				{
					elem = "string"
				}
				s.Tags = append(s.Tags, elem)
			}
		}
	}
}

// SetFake set fake values.
func (s *Icon1ID) SetFake() {
	var variant string

	{
		variant = "string"
	}
	s.SetString(variant)
}

// SetFake set fake values.
func (s *OptBool) SetFake() {
	var elem bool
	{
		elem = true
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptClearQueueOKSimpleMQ) SetFake() {
	var elem ClearQueueOKSimpleMQ
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptCommonServiceItemDescription) SetFake() {
	var elem CommonServiceItemDescription
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptCreateQueueRequestCommonServiceItemProviderClass) SetFake() {
	var elem CreateQueueRequestCommonServiceItemProviderClass
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIcon) SetFake() {
	var elem Icon
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptIcon1ID) SetFake() {
	var elem Icon1ID
	{
		elem.SetFake()
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptInt) SetFake() {
	var elem int
	{
		elem = int(0)
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *OptString) SetFake() {
	var elem string
	{
		elem = "string"
	}
	s.SetTo(elem)
}

// SetFake set fake values.
func (s *Provider) SetFake() {
	{
		{
			s.ID = int(0)
		}
	}
	{
		{
			s.Class.SetFake()
		}
	}
	{
		{
			s.Name = "string"
		}
	}
	{
		{
			s.ServiceClass = "string"
		}
	}
}

// SetFake set fake values.
func (s *ProviderClass) SetFake() {
	*s = ProviderClassSimplemq
}

// SetFake set fake values.
func (s *QueueName) SetFake() {
	var unwrapped string
	{
		unwrapped = "string"
	}
	*s = QueueName(unwrapped)
}

// SetFake set fake values.
func (s *RotateAPIKeyBadRequest) SetFake() {
	var unwrapped Error
	{
		unwrapped.SetFake()
	}
	*s = RotateAPIKeyBadRequest(unwrapped)
}

// SetFake set fake values.
func (s *RotateAPIKeyInternalServerError) SetFake() {
	var unwrapped Error
	{
		unwrapped.SetFake()
	}
	*s = RotateAPIKeyInternalServerError(unwrapped)
}

// SetFake set fake values.
func (s *RotateAPIKeyNotFound) SetFake() {
	var unwrapped Error
	{
		unwrapped.SetFake()
	}
	*s = RotateAPIKeyNotFound(unwrapped)
}

// SetFake set fake values.
func (s *RotateAPIKeyOK) SetFake() {
	{
		{
			s.SimpleMQ.SetFake()
		}
	}
	{
		{
			s.IsOk.SetFake()
		}
	}
}

// SetFake set fake values.
func (s *RotateAPIKeyOKSimpleMQ) SetFake() {
	{
		{
			s.Result.SetFake()
		}
	}
	{
		{
			s.Apikey = "string"
		}
	}
}

// SetFake set fake values.
func (s *RotateAPIKeyUnauthorized) SetFake() {
	var unwrapped Error
	{
		unwrapped.SetFake()
	}
	*s = RotateAPIKeyUnauthorized(unwrapped)
}

// SetFake set fake values.
func (s *Settings) SetFake() {
	{
		{
			s.VisibilityTimeoutSeconds = int(0)
		}
	}
	{
		{
			s.ExpireSeconds = int(0)
		}
	}
}

// SetFake set fake values.
func (s *Status) SetFake() {
	{
		{
			s.QueueName = "string"
		}
	}
}
